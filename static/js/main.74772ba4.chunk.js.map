{"version":3,"sources":["index.js"],"names":["Square","props","className","winnerSquare","onClick","value","Board","i","this","winner","winnerLine","includes","squares","boardSquare","row","boardRow","col","push","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","click","sort","slice","length","calculateWinner","setState","concat","step","sortStatus","active","fontWeight","inactive","current","sortState","drawState","calculateDraw","status","moves","map","move","vitri","day","calculateStep","desc","style","jumpTo","handleClick","reverse","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.74772ba4.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n   \r\n    return (\r\n        <button className={`square ${props.winnerSquare ? 'winnerSquare' : ''}`} onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\nclass Board extends React.Component {\r\n    renderSquare(i) {\r\n        let winnerSquare = this.props.winner && this.props.winner.winnerLine.includes(i)? true:false;\r\n        return (\r\n            <Square\r\n                value={this.props.squares[i]}\r\n                onClick={() => this.props.onClick(i)}\r\n                winnerSquare={winnerSquare}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let boardSquare = [];\r\n        for (let row = 0; row < 3; row++) {\r\n            let boardRow = [];\r\n            for (let col = 0; col < 3; col++) {\r\n                boardRow.push(<span key={(row * 3) + col}>{this.renderSquare((row * 3) + col)}</span>)\r\n            }\r\n            boardSquare.push(<div className=\"board-row\" key={row}>{boardRow}</div>)\r\n        }\r\n        return (\r\n            <div>\r\n                {boardSquare}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null),\r\n            }],\r\n            stepNumber: 0,//buoc di\r\n            xIsNext: true,//xac dinh nguoi choi\r\n            click: null,//vi tri khi click chuot \r\n            sort: true,//sort tang dan\r\n        };\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n\r\n        if (calculateWinner(squares)) {\r\n            return;\r\n        }\r\n        if (squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares: squares,\r\n                click: i\r\n            }]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext,\r\n        });\r\n    }\r\n\r\n    jumpTo(step) {\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const active = {\r\n            fontWeight: 'bold'\r\n        };\r\n\r\n        const inactive = {\r\n            fontWeight: 'normal'\r\n        };\r\n\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = calculateWinner(current.squares);\r\n        const sortState = this.state.sort;// trang thai sap xep \r\n        const drawState = calculateDraw(current.squares);// trang thai hoa \r\n\r\n        let sortStatus;\r\n        if (this.state.sort) {\r\n            sortStatus = 'In ascending order'\r\n        } else {\r\n            sortStatus = 'In descending order'\r\n        }\r\n\r\n        const moves = history.map((step, move) => {\r\n            const vitri = calculateStep(step.click);\r\n            const desc = move ?\r\n                'Go to move #' + move + ' (' + vitri + ')' :\r\n                'Go to game start';\r\n            return (\r\n                <li key={move}>\r\n                    <button style={this.state.stepNumber === move ? active : inactive} onClick={() => this.jumpTo(move)}>\r\n                        {desc}\r\n                    </button>\r\n                </li>\r\n            );\r\n        });\r\n\r\n        let status;\r\n        if (winner) {\r\n            status = 'Winner: ' + winner.winner;\r\n        } else if (drawState) {\r\n            status = 'Draw game'\r\n        }else {\r\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n        }\r\n\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board\r\n                        squares={current.squares}\r\n                        onClick={(i) => this.handleClick(i)}\r\n                        winner={winner}\r\n                    />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{status}</div>\r\n                    <ol>{sortState ? moves : moves.reverse()}</ol>\r\n                    <button onClick={() => this.setState({ sort: !this.state.sort })}>\r\n                        {sortStatus}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return {\r\n                winner: squares[a], \r\n                winnerLine: [a, b, c]\r\n            };\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction calculateDraw(squares) {\r\n    for (let i = 0; i < 9; i++) {\r\n        if (squares[i] === null) return false;\r\n    }\r\n    return true;\r\n}\r\nfunction calculateStep(vitri) {\r\n    let day;\r\n    switch (vitri) {\r\n        case 0:\r\n            day = \"0,0\";\r\n            break;\r\n        case 1:\r\n            day = \"0,1\";\r\n            break;\r\n        case 2:\r\n            day = \"0,2\";\r\n            break;\r\n        case 3:\r\n            day = \"1,0\";\r\n            break;\r\n        case 4:\r\n            day = \"1,1\";\r\n            break;\r\n        case 5:\r\n            day = \"1,2\";\r\n            break;\r\n        case 6:\r\n            day = \"2,0\";\r\n        case 7:\r\n            day = \"2,1\";\r\n            break;\r\n        case 8:\r\n            day = \"2,2\";\r\n            break;\r\n    }\r\n    return day;\r\n}"],"sourceRoot":""}